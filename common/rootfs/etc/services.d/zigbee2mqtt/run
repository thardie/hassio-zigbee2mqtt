#!/usr/bin/with-contenv bashio

if bashio::config.true 'zigbee_herdsman_debug'; then
    bashio::log.info "Zigbee Herdsman debug logging enabled"
    export DEBUG="zigbee-herdsman:*"
fi
export NODE_PATH=/app/node_modules
export ZIGBEE2MQTT_DATA="$(bashio::config 'data_path')"
export ZIGBEE2MQTT_CONFIG_FRONTEND='{"port": 8099}'

# Expose addon configuration through environment variables.
function export_config() {
    local key=${1}
    local subkey

    if bashio::config.is_empty "${key}"; then
        return
    fi

    for subkey in $(bashio::jq "$(bashio::config "${key}")" 'keys[]'); do
        export "ZIGBEE2MQTT_CONFIG_$(bashio::string.upper "${key}")_$(bashio::string.upper "${subkey}")=$(bashio::config "${key}.${subkey}")"
    done
}

export_config 'mqtt'
export_config 'serial'

if bashio::config.is_empty 'mqtt' && bashio::var.has_value "$(bashio::services 'mqtt')"; then
    if bashio::var.true "$(bashio::services 'mqtt' 'ssl')"; then
        export ZIGBEE2MQTT_CONFIG_MQTT_SERVER="mqtts://$(bashio::services 'mqtt' 'host'):$(bashio::services 'mqtt' 'port')"
    else
        export ZIGBEE2MQTT_CONFIG_MQTT_SERVER="mqtt://$(bashio::services 'mqtt' 'host'):$(bashio::services 'mqtt' 'port')"
    fi
    export ZIGBEE2MQTT_CONFIG_MQTT_USER="$(bashio::services 'mqtt' 'username')"
    export ZIGBEE2MQTT_CONFIG_MQTT_PASSWORD="$(bashio::services 'mqtt' 'password')"
fi

cd /app || bashio::exit.nok "Could not change directory to /app"
bashio::log.info "Handing over control to Zigbee2mqtt Core ..."
exec npm start
